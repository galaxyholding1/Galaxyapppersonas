{
  "openapi": "3.0.0",
  "info": {
    "title": "GalaxyPay API",
    "version": "1.0.0",
    "description": "API RESTful para autenticación y registro de usuarios"
  },
  "servers": [
    {
      "url": "http://localhost/galaxy-api-eng/backendPhp/public/index.php",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Iniciar sesión",
        "description": "Autentica un usuario mediante correo y contraseña",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "juan@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6..."
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Parámetros inválidos" },
          "401": { "description": "Credenciales incorrectas" }
        }
      }
    },
    "/register": {
    "post": {
      "summary": "Registro de nuevo usuario",
      "tags": ["Auth"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "format": "email" },
                "password": { "type": "string", "format": "password" },
                "name": { "type": "string" },
                "familyName": { "type": "string" },
                "phone": { "type": "string" },
                "address": { "type": "string" },
                "addressSecondary": { "type": "string" },
                "postalCode": { "type": "string" },
                "countryId": { "type": "integer" },
                "localityId": { "type": "integer" },
                "acceptTerms": { "type": "boolean" },
                "acceptPolitics": { "type": "boolean" },
                "clientType": { "type": "string", "enum": ["people", "business"] },
                "documentNumber": { "type": "string" },
                "birthdate": { "type": "string", "format": "date" },
                "documentTypeId": { "type": "integer" },
                "id_employment_status": { "type": "integer" },
                "id_fund_source": { "type": "integer" },
                "id_job_sector": { "type": "integer" }
              },
              "required": ["email", "password", "name", "familyName", "documentNumber", "documentTypeId", "countryId", "clientType", "acceptTerms", "acceptPolitics"]
            },
            "example": {
              "email": "email@example.com",
              "password": "Abc123@",
              "name": "John",
              "familyName": "Doe",
              "phone": "+573001112233",
              "address": "123 Main St",
              "addressSecondary": "Apt 301",
              "postalCode": "110111",
              "countryId": 1,
              "localityId": 2,
              "acceptTerms": true,
              "acceptPolitics": true,
              "clientType": "people",
              "documentNumber": "1234567890",
              "birthdate": "1990-01-15",
              "documentTypeId": 1,
              "id_employment_status": 1,
              "id_fund_source": 2,
              "id_job_sector": 3
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Usuario registrado correctamente",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "message": "Usuario registrado correctamente"
              }
            }
          }
        },
        "400": {
          "description": "Faltan campos obligatorios",
          "content": {
            "application/json": {
              "example": {
                "error": "Email y contraseña son obligatorios"
              }
            }
          }
        },
        "409": {
          "description": "Email ya registrado",
          "content": {
            "application/json": {
              "example": {
                "error": "Este correo ya está registrado"
              }
            }
          }
        },
        "500": {
          "description": "Error interno del servidor"
        }
      }
    }
    },
    "/countries": {
      "get": {
        "summary": "Listar países disponibles",
        "description": "Devuelve una lista de países activos con nombre, código ISO, bandera y código telefónico",
        "responses": {
          "200": {
            "description": "Lista de países",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer", "example": 1 },
                          "name": { "type": "string", "example": "Colombia" },
                          "isoCode": { "type": "string", "example": "CO" },
                          "flagUrl": { "type": "string", "example": "https://flagcdn.com/co.svg" },
                          "dialingCode": { "type": "string", "example": "+57" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/personal-documents/{countryId}/{type}": {
      "get": {
        "summary": "Obtener tipos de documento por país y tipo de usuario",
        "description": "Devuelve los documentos válidos para el país indicado y el tipo de cliente ('client' o 'business').",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "ID del país"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "enum": ["client", "business"], "example": "client" },
            "description": "Tipo de usuario: client o business"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de documento",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id":        { "type": "integer", "example": 1 },
                          "name":      { "type": "string",  "example": "Cédula de Ciudadanía" },
                          "acronym":   { "type": "string",  "example": "CC" },
                          "user_type": { "type": "string",  "example": "client" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Parámetros inválidos" },
          "404": { "description": "No se encontraron tipos de documento" }
        }
      }
    },
    "/validate/user": {
      "post": {
        "summary": "Validar existencia de email o teléfono",
        "description": "Verifica si un email o número de teléfono ya están registrados.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "email@example.com" },
                  "phone": { "type": "string", "example": "3001234567" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado de validación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailExists": { "type": "boolean", "example": false },
                    "phoneExists": { "type": "boolean", "example": true }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Provide at least email or phone" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/validate/document": {
      "post": {
        "summary": "Validar existencia de documento",
        "description": "Verifica si un número de documento de identidad ya está registrado en el sistema.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentNumber": {
                    "type": "string",
                    "example": "1234567890"
                  }
                },
                "required": ["documentNumber"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado de validación del documento",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentExists": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parámetro faltante o incorrecto",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "documentNumber is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/forgot-password": {
      "post": {
        "summary": "Solicitar recuperación de contraseña",
        "description": "Genera un token temporal para restablecer la contraseña del usuario",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "juan@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token generado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Reset token generated" },
                    "token":   { "type": "string", "example": "abc123xyz987..." }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email no registrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Email not found" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reset-password": {
  "post": {
    "summary": "Restablecer contraseña con token",
    "description": "Permite restablecer la contraseña de un usuario utilizando un token válido (válido por 1 hora).",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "example": 1
              },
              "token": {
                "type": "string",
                "example": "abc123xyz456"
              },
              "newPassword": {
                "type": "string",
                "example": "NuevaClave@2025"
              }
            },
            "required": ["userId", "token", "newPassword"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Contraseña cambiada exitosamente",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Password reset successfully" }
              }
            }
          }
        }
      },
      "400": {
        "description": "Token inválido o expirado",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Invalid or expired token" }
              }
            }
          }
        }
      }
    }
  }
    },
    "/locations/provinces": {
      "get": {
        "summary": "Obtener provincias por país",
        "description": "Devuelve todas las provincias asociadas a un país.",
        "parameters": [
          {
            "name": "country_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del país"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de provincias del país",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 10 },
                      "name": { "type": "string", "example": "Antioquia" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "country_id es requerido"
          }
        }
      }
    },
  "/locations/localities": {
    "get": {
      "summary": "Obtener localidades por provincia",
      "description": "Devuelve todas las localidades asociadas a una provincia.",
      "parameters": [
        {
          "name": "province_id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de la provincia"
        }
      ],
      "responses": {
        "200": {
          "description": "Lista de localidades de la provincia",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 101 },
                    "name": { "type": "string", "example": "Medellín" }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "province_id es requerido"
        }
      }
    }
  },
  "/employment-status": {
      "get": {
        "summary": "Obtener situaciones laborales",
        "tags": ["EmploymentStatus"],
        "responses": {
          "200": {
            "description": "Lista de situaciones laborales",
            "content": {
              "application/json": {
                "example": [
                  { "id": 1, "name": "Empleado", "description": "Trabajo en relación de dependencia" }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear situación laboral",
        "tags": ["EmploymentStatus"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creado correctamente"
          },
          "400": {
            "description": "Faltan datos"
          }
        }
      }
  },
  "/job-sector": {
      "get": {
        "summary": "Obtener sectores de trabajo",
        "tags": ["JobSector"],
        "responses": {
          "200": {
            "description": "Lista de sectores",
            "content": {
              "application/json": {
                "example": [
                  { "id_job_sector": 1, "name": "Tecnología", "description": "Sector relacionado a software y hardware" }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear sector de trabajo",
        "tags": ["JobSector"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sector creado"
          },
          "400": {
            "description": "Faltan datos"
          }
        }
      }
  },

  "/fund-source": {
      "get": {
        "summary": "Obtener fuentes de fondos",
        "tags": ["FundSource"],
        "responses": {
          "200": {
            "description": "Lista de fuentes",
            "content": {
              "application/json": {
                "example": [
                  { "id_fund_source": 1, "name": "Ahorros", "description": "Fondos propios del usuario" }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear fuente de fondos",
        "tags": ["FundSource"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fuente creada correctamente"
          },
          "400": {
            "description": "Faltan datos"
          }
        }
      }
  }







  }
}
